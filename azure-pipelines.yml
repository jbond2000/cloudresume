trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  ARM_CLIENT_ID: "d0abc8bf-92b5-4b7a-ae04-6a0625e55d36"
  ARM_CLIENT_SECRET: "eez8Q~wHBDUCc0LvFPo2lpFvfZQFPQcwuuTfyaR_"
  ARM_TENANT_ID: "ca249364-2247-4916-be5f-6878448ff851"
  ARM_SUBSCRIPTION_ID: "a67fa08c-8a71-4843-a6e9-1fbd1d8198b6"

jobs:
- job: terraform
  displayName: 'Terraform Plan and Apply'
  steps:
  - checkout: self

  - script: |
      # Log in to Azure CLI using the environment variables
      az login --service-principal -u "$ARM_CLIENT_ID" -p "$ARM_CLIENT_SECRET" --tenant "$ARM_TENANT_ID"
      az account set --subscription "$ARM_SUBSCRIPTION_ID"
    displayName: 'Azure CLI Login'
    env:
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      ARM_TENANT_ID: $(ARM_TENANT_ID)
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)

  - script: |
      # Clean up any previous Terraform initialization to avoid conflicts
      rm -rf .terraform
      rm -f terraform.tfstate
      rm -f terraform.tfstate.backup

      # Initialize Terraform with reconfiguration to ensure the backend is properly set up
      terraform init -reconfigure
    displayName: 'Terraform Init with Reconfigure'
    env:
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      ARM_TENANT_ID: $(ARM_TENANT_ID)
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)

  - script: |
      # Plan the changes and save the plan to a file
      terraform plan -out=tfplan
    displayName: 'Terraform Plan'
    env:
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      ARM_TENANT_ID: $(ARM_TENANT_ID)
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)

  - script: |
      # Apply the planned changes
      terraform apply -auto-approve tfplan
    displayName: 'Terraform Apply'
    env:
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      ARM_TENANT_ID: $(ARM_TENANT_ID)
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
